openapi: 3.0.0
info:
  title: Decidento API documentation
  description: All endpoints
  version: "2.0"
servers:
  - url: https://api.decidento.com
    description: Production Environment
  - url: https://decidento.dev2.colonel-moutarde.fr
    description: Staging Environment
tags:
  - name: "articles"
    description: "Everything about articles"
    externalDocs:
      description: "Find out more"
      url: "https://api.decidento.com/documentation"
  - name: "companies"
    description: "Everything about companies"
    externalDocs:
      description: "Find out more"
      url: "https://api.decidento.com/documentation"
  - name: "signals"
    description: "Everything about signals"
    externalDocs:
      description: "Find out more"
      url: "https://api.decidento.com/documentation"
paths:
  /articles:
    get:
      tags:
        - articles
      summary: "get last articles"
      description: ""
      operationId: "getArticles"
      parameters:
        - in: query
          name: term
          description: Search term (keywords, siren, social name, ...)
          schema:
            type: string
        - in: query
          name: siren
          description: "Siren of main companies related to article / signals (format : ^([0-9]{9}))"
          schema:
            type: integer
            pattern: ^([0-9]{9})
            minLength: 9
            maxLength: 9
            format: int9
        - in: query
          name: date_begin
          description: "Begin date published (ex: 2019-03-03)"
          schema:
            type: string
            pattern: ^(\d{4})-(\d{2})-(\d{2})
        - in: query
          name: date_end
          description: "End date published (ex: 2019-03-03)"
          schema:
            type: string
            pattern: ^(\d{4})-(\d{2})-(\d{2})
        - in: query
          name: limit
          description: "The maximum records to return. If the value exceeds the maximum (200), then the maximum value will be used."
          schema:
            type: integer
            default: 100
        - in: query
          name: offset
          description: "Start number for returned articles. (usefull for paginate results)."
          schema:
            type: integer
            default: 1
        - in: query
          name: order
          description: Order Field
          schema:
            type: string
            enum:
              - publishedAt
            default: publishedAt
        - in: query
          name: sort
          description: Sorting direction
          schema:
            type: string
            enum:
              - desc
              - asc
            default: desc
        - in: query
          name: meta
          description: Output paginate info meta
          schema:
            type: boolean
            default: "false"
        - in: query
          name: _format
          description: Output format
          schema:
            type: string
            enum:
              - json
              - xml
            default: json
        - in: header
          name: X-API-VERSION
          schema:
            type: string
          required: false
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 225741
                    title:
                      type: string
                      example: "Partenariat entre Open Tourisme Lab et Altran"
                    text:
                      type: string
                      example: "Un partenariat entre Open Tourisme Lab Nimes Metropole (<em>siège à Nimes /30 - accélérateur de start-up spécialisées dans le tourisme</em>)&nbsp;et Altran Technologies - Altran (<em>siège à Neuilly-sur-Seine /92 - conseil en innovation et ingénierie avancée - effectif groupe estimé : 12500 - CA légal 2018 : 1 023 212 313€ - CA groupe estimé 2016 : 2 120 000 000€</em>)&nbsp;a été officiellement signé et s'adresse aux professionnels du tourisme. Altran apportera alors son expertise avec des séminaires, des workshops et des audits pour les entreprises accompagnées par Open Tourisme Lab. <a href=\"https://ecomnews.fr/article/Nimes-open-tourisme-tab-renforce-grace-altran-mieux-accompagner-start-up\">Plus d'informations ici</a>.&nbsp;"
                    pub_date:
                      type: string
                      pattern: ^\d{2}/\d{2}/\d{4}$
                      description: Format d/m/Y
                      example: "22/10/2018"
                    departments:
                      type: array
                      items:
                        $ref: '#/components/schemas/Department'
                    sources:
                      type: array
                      items:
                        $ref: '#/components/schemas/Source'
                    companies:
                      type: array
                      items:
                        $ref: '#/components/schemas/CompanyLight'
                    sectors:
                      type: array
                      items:
                        $ref: '#/components/schemas/Sector'
                    quoted_articles:
                      type: array
                      items:
                        $ref: '#/components/schemas/QuotedArticle'
                    signals:
                      type: array
                      items:
                        oneOf:
                          - $ref: "#/components/schemas/Signal_A"
                          - $ref: "#/components/schemas/Signal_B"
                          - $ref: "#/components/schemas/Signal_C"
                          - $ref: "#/components/schemas/Signal_D"
                          - $ref: "#/components/schemas/Signal_E"
                          - $ref: "#/components/schemas/Signal_F"
                          - $ref: "#/components/schemas/Signal_G"
                          - $ref: "#/components/schemas/Signal_H"
                          - $ref: "#/components/schemas/Signal_Hbis"
                          - $ref: "#/components/schemas/Signal_I"
                          - $ref: "#/components/schemas/Signal_J"
                          - $ref: "#/components/schemas/Signal_K"
                          - $ref: "#/components/schemas/Signal_K1"
                          - $ref: "#/components/schemas/Signal_L"
                          - $ref: "#/components/schemas/Signal_M"
                          - $ref: "#/components/schemas/Signal_N"
                          - $ref: "#/components/schemas/Signal_O"
                          - $ref: "#/components/schemas/Signal_P"
                          - $ref: "#/components/schemas/Signal_Q"
                          - $ref: "#/components/schemas/Signal_R"
                          - $ref: "#/components/schemas/Signal_S"
                          - $ref: "#/components/schemas/Signal_T"
                          - $ref: "#/components/schemas/Signal_Tbis"
                          - $ref: "#/components/schemas/Signal_U"
                          - $ref: "#/components/schemas/Signal_V"
                          - $ref: "#/components/schemas/Signal_W"
                          - $ref: "#/components/schemas/Signal_X"
                          - $ref: "#/components/schemas/Signal_Y"
                          - $ref: "#/components/schemas/Signal_Z"
        400:
          description: "Bad request"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /articles/search:
    get:
      tags:
        - articles
      summary: "search list of article"
      description: ""
      operationId: "searchArticles"
      parameters:
        -   in: query
            name: term
            description: Search term (keywords, siren, social name, ...)
            schema:
              type: string
        -   in: query
            name: siren
            description: "List of SIREN (comma separated)"
            schema:
              type: array
              minLength: 9
              format: int9
        -   in: query
            name: date_begin
            description: "Begin date published (ex: 2019-03-03)"
            schema:
              type: string
              pattern: ^(\d{4})-(\d{2})-(\d{2})
        -   in: query
            name: date_end
            description: "End date published (ex: 2019-03-03)"
            schema:
              type: string
              pattern: ^(\d{4})-(\d{2})-(\d{2})
        -   in: query
            name: limit
            description: "The maximum records to return. If the value exceeds the maximum (200), then the maximum value will be used."
            schema:
              type: integer
              default: 100
        -   in: query
            name: offset
            description: "Start number for returned articles. (usefull for paginate results)."
            schema:
              type: integer
              default: 1
        -   in: query
            name: order
            description: Order Field
            schema:
              type: string
              enum:
                - publishedAt
              default: publishedAt
        -   in: query
            name: sort
            description: Sorting direction
            schema:
              type: string
              enum:
                - desc
                - asc
              default: desc
        -   in: query
            name: meta
            description: Output paginate info meta
            schema:
              type: boolean
              default: "false"
        -   in: query
            name: _format
            description: Output format
            schema:
              type: string
              enum:
                - json
                - xml
              default: json
        -   in: header
            name: X-API-VERSION
            schema:
              type: string
            required: false
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 225741
                    pub_date:
                      type: string
                      pattern: ^\d{2}/\d{2}/\d{4}$
                      description: Format d/m/Y
                      example: "22/10/2018"
                    companies_links:
                      type: array
                      items:
                        $ref: '#/components/schemas/CompanySimple'
                    links:
                      type: array
                      items:
                        $ref: '#/components/schemas/ArticleLinks'
        400:
          description: "Bad request"
      security:
        -   X_AUTH_TOKEN: [ ]
        -   X_AUTH_ID: [ ]
  /articles/{articleId}:
    get:
      tags:
        - "articles"
      summary: "Find article by ID"
      description: "Returns a single article"
      operationId: "getArticleById"
      parameters:
        - in: "path"
          name: "articleId"
          description: "ID of article to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        200:
          description: "successful request"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Article'
        400:
          description: "Bad request"
        404:
          description: "Invalid ID supplied"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /articles/collection:
    get:
      tags:
        - "articles"
      summary: "Find a collection of articles by IDS"
      description: "Returns a collection of articles"
      operationId: "getArticlesCollectionByIds"
      parameters:
        - in: query
          name: "listIds"
          description: "IDS of articles to return"
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: "successful request"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Article'
        400:
          description: "Bad request"
        404:
          description: "Invalid ID supplied"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /companies:
    get:
      tags:
        - "companies"
      summary: "Search companies with parameters"
      description: "Returns a list of companies"
      operationId: "getCompanies"
      parameters:
        - in: query
          name: siren
          description: siren unique id
          schema:
            type: integer
            pattern: ^\d{2}/\d{2}/\d{4}$
            example: "662042449"
        - in: query
          name: term
          description: Search term
          schema:
            type: string
            example: "CEGID"
        - in: query
          name: limit
          description: Max number of companies returned
          schema:
            type: integer
            pattern: ^\d+$
            default: 100
            example: 100
        - in: query
          name: offset
          description: Start number for returned companies. (usefull for paginate results)
          schema:
            type: integer
            pattern: ^\d+$
            default: 1
            example: 100
        - in: query
          name: order
          description: Order field for results
          schema:
            type: string
            enum:
              - "socialName"
              - "siren"
              - "updatedAt"
            default: socialName
            example: updatedAt
        - in: "query"
          name: "sort"
          description: "Sort direction"
          schema:
            type: "string"
            enum:
              - "desc"
              - "asc"
            default: "desc"
        - in: "query"
          name: "meta"
          description: "Output paginate info meta"
          schema:
            type: "boolean"
            default: false
        - in: "query"
          name: "_format"
          description: "Output format"
          schema:
            type: "string"
            enum:
              - "json"
              - "xml"
            default: "json"
      responses:
        200:
          description: "successful request"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/CompanyLight'
        400:
          description: "Bad request"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /companies/{companyId}:
    get:
      tags:
        - "companies"
      summary: "Find company by ID"
      description: "Returns a single company"
      operationId: "getCompanyById"
      parameters:
        - in: "path"
          name: "companyId"
          description: "ID of company to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
            pattern: ^\d+$
            example: 2105
        - in: "query"
          name: "_format"
          description: "Output format"
          schema:
            type: "string"
            enum:
              - "json"
              - "xml"
            default: "json"
      responses:
        200:
          description: "successful request"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Company'
        400:
          description: "Bad request"
        404:
          description: "Invalid ID supplied"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /companies/collection:
    get:
      tags:
        - "companies"
      summary: "Find a collection of companies by IDS"
      description: "Returns a collection of companies"
      operationId: "getCompaniesCollectionByIds"
      parameters:
        - in: query
          name: "listIds"
          description: "IDS of companies to return"
          required: true
          schema:
            type: array
            items:
              type: string
        - in: "query"
          name: "_format"
          description: "Output format"
          schema:
            type: "string"
            enum:
              - "json"
              - "xml"
            default: "json"
      responses:
        200:
          description: "successful request"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Company'
        400:
          description: "Bad request"
        404:
          description: "Invalid ID supplied"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /companies/v2:
    get:
      tags:
        - "companies"
      summary: "Search companies with parameters"
      description: "Returns a list of companies"
      operationId: "getCompaniesV2"
      parameters:
        - in: query
          name: siren
          description: siren unique id
          schema:
            type: integer
            pattern: ^\d{9}$
            example: "327888111"
        - in: query
          name: siret
          description: siret unique id
          schema:
            type: integer
            pattern: ^\d{14}$
            example: "32788811100447"
        - in: query
          name: term
          description: Search term
          schema:
            type: string
            example: "CEGID"
        - in: query
          name: code_postal
          description: Zip code
          schema:
            type: string
            pattern: ^\d{5}$
            example: "69009"
        - in: query
          name: ville
          description: City
          schema:
            type: string
            example: "Lyon"
        - in: query
          name: pays
          description: Country
          schema:
            type: string
            example: "France"
        - in: query
          name: naf
          description: Search Companies Ape Code
          schema:
            type: string
            example: "70.10Z"
        - in: query
          name: radiee
          description: Search Companies is Radiate
          schema:
            type: integer
            pattern: ^\d{1}$
            nullable: true
            default: null
            example: "1"
        - in: query
          name: appartient_groupe
          description: Search Companies is Owned by a Group
          schema:
            type: integer
            pattern: ^\d{1}$
            nullable: true
            default: null
            example: "1"
        - in: query
          name: derniere_maj
          description: Search Companies last update (greater than date)
          schema:
            type: string
            format: date
            pattern: ^\d{4}-\d{2}-\d{2}$
            example: "2021-11-12"
        - in: query
          name: limit
          description: Max number of companies returned
          schema:
            type: integer
            pattern: ^\d+$
            default: 100
            example: 100
        - in: query
          name: offset
          description: Start number for returned companies. (usefull for paginate results)
          schema:
            type: integer
            pattern: ^\d+$
            default: 1
            example: 100
        - in: query
          name: order
          description: Order field for results
          schema:
            type: string
            enum:
              - "raison_sociale_keyword"
              - "last_kpi.ca_bilan"
              - "last_kpi.effectif"
              - "cccid"
              - "last_modified"
            default: last_modified
            example: last_modified
        - in: "query"
          name: "sort"
          description: "Sort direction"
          schema:
            type: "string"
            enum:
              - "desc"
              - "asc"
            default: "desc"
        - in: "query"
          name: "meta"
          description: "Output paginate info meta"
          schema:
            type: "boolean"
            default: false
        - in: "query"
          name: "_format"
          description: "Output format"
          schema:
            type: "string"
            enum:
              - "json"
              - "xml"
            default: "json"
      responses:
        200:
          description: "successful request"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/CompanyLightV2'
        400:
          description: "Bad request"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /companies/{companyCccid}/v2:
    get:
      tags:
        - "companies"
      summary: "Find company by CCCID"
      description: "Returns a single company"
      operationId: "getCompanyByCccid"
      parameters:
        - in: "path"
          name: "companyCccid"
          description: "CCCID of company to return"
          required: true
          schema:
            type: "string"
            pattern: ^(FR|ETR)_\d{9}$
            example: "FR_327888111"
        - in: "query"
          name: "_format"
          description: "Output format"
          schema:
            type: "string"
            enum:
              - "json"
              - "xml"
            default: "json"
      responses:
        200:
          description: "successful request"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/CompanyV2'
        400:
          description: "Bad request"
        404:
          description: "Invalid ID supplied"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /companies/collection/v2:
    get:
      tags:
        - "companies"
      summary: "Find a collection of companies by SIREN"
      description: "Returns a collection of companies"
      operationId: "getCompaniesCollectionBySiren"
      parameters:
        - in: query
          name: "listIds"
          description: "SIREN of companies to return"
          required: true
          schema:
            type: "array"
            items:
              type: integer
              pattern: ^\d{9}$
              example: 327888111
        #- in: "query"
        #  name: "_format"
        #  description: "Output format"
        #  schema:
        #    type: "string"
        #    enum:
        #      - "json"
        #      - "xml"
        #    default: "json"
      responses:
        200:
          description: "successful request"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/CompanyV2'
        400:
          description: "Bad request"
        404:
          description: "Invalid ID supplied"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /signals:
    get:
      tags:
        - "signals"
      summary: "get last signals"
      description: ""
      operationId: "getSignals"
      parameters:
        - in: "query"
          name: "limit"
          description: "Limit values that need to be considered for filter"
          schema:
            type: "integer"
            default: 200
        - in: "query"
          name: "offset"
          description: "Offset to start (combine with limit for paginate)"
          schema:
            type: "integer"
            default: 1
        - in: "query"
          name: "order"
          description: "Order Field"
          schema:
            type: "string"
            enum:
              - "updatedAt"
              - "publishedAt"
            default: "updatedAt"
        - in: "query"
          name: "sort"
          description: "Sorting"
          schema:
            type: "string"
            enum:
              - "desc"
              - "asc"
            default: "desc"
        - in: "query"
          name: "meta"
          description: "Output paginate info meta"
          schema:
            type: "boolean"
            default: false
        - in: "query"
          name: "_format"
          description: "Output format"
          schema:
            type: "string"
            enum:
              - "json"
              - "xml"
            default: "json"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/SignalLight'
        400:
          description: "Bad request"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /signals/{signalId}:
    get:
      tags:
        - "signals"
      summary: "Find signal by ID"
      description: "Returns a single signal"
      operationId: "getSignalById"
      parameters:
        - in: "path"
          name: "signalId"
          description: "ID of signal to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Signal_A"
                  - $ref: "#/components/schemas/Signal_B"
                  - $ref: "#/components/schemas/Signal_C"
                  - $ref: "#/components/schemas/Signal_D"
                  - $ref: "#/components/schemas/Signal_E"
                  - $ref: "#/components/schemas/Signal_F"
                  - $ref: "#/components/schemas/Signal_G"
                  - $ref: "#/components/schemas/Signal_H"
                  - $ref: "#/components/schemas/Signal_Hbis"
                  - $ref: "#/components/schemas/Signal_I"
                  - $ref: "#/components/schemas/Signal_J"
                  - $ref: "#/components/schemas/Signal_K"
                  - $ref: "#/components/schemas/Signal_K1"
                  - $ref: "#/components/schemas/Signal_L"
                  - $ref: "#/components/schemas/Signal_M"
                  - $ref: "#/components/schemas/Signal_N"
                  - $ref: "#/components/schemas/Signal_O"
                  - $ref: "#/components/schemas/Signal_P"
                  - $ref: "#/components/schemas/Signal_Q"
                  - $ref: "#/components/schemas/Signal_R"
                  - $ref: "#/components/schemas/Signal_S"
                  - $ref: "#/components/schemas/Signal_T"
                  - $ref: "#/components/schemas/Signal_Tbis"
                  - $ref: "#/components/schemas/Signal_U"
                  - $ref: "#/components/schemas/Signal_V"
                  - $ref: "#/components/schemas/Signal_W"
                  - $ref: "#/components/schemas/Signal_X"
                  - $ref: "#/components/schemas/Signal_Y"
                  - $ref: "#/components/schemas/Signal_Z"
                  - $ref: "#/components/schemas/Signal_Z1"
                  - $ref: "#/components/schemas/Signal_Z2"
                  - $ref: "#/components/schemas/Signal_Z3"
        400:
          description: "Bad request"
        404:
          description: "Invalid ID supplied"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
  /signals/collection:
    get:
      tags:
        - "signals"
      summary: "Find collection of signals by IDS"
      description: "Returns a colelction of signals"
      operationId: "getSignalsCollectionByIds"
      parameters:
        - in: "query"
          name: "listIds"
          description: "IDS of signals to return"
          required: true
          schema:
            type: array
            items:
              type: "integer"
              format: "int64"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Signal_A"
                  - $ref: "#/components/schemas/Signal_B"
                  - $ref: "#/components/schemas/Signal_C"
                  - $ref: "#/components/schemas/Signal_D"
                  - $ref: "#/components/schemas/Signal_E"
                  - $ref: "#/components/schemas/Signal_F"
                  - $ref: "#/components/schemas/Signal_G"
                  - $ref: "#/components/schemas/Signal_H"
                  - $ref: "#/components/schemas/Signal_Hbis"
                  - $ref: "#/components/schemas/Signal_I"
                  - $ref: "#/components/schemas/Signal_J"
                  - $ref: "#/components/schemas/Signal_K"
                  - $ref: "#/components/schemas/Signal_K1"
                  - $ref: "#/components/schemas/Signal_L"
                  - $ref: "#/components/schemas/Signal_M"
                  - $ref: "#/components/schemas/Signal_N"
                  - $ref: "#/components/schemas/Signal_O"
                  - $ref: "#/components/schemas/Signal_P"
                  - $ref: "#/components/schemas/Signal_Q"
                  - $ref: "#/components/schemas/Signal_R"
                  - $ref: "#/components/schemas/Signal_S"
                  - $ref: "#/components/schemas/Signal_T"
                  - $ref: "#/components/schemas/Signal_Tbis"
                  - $ref: "#/components/schemas/Signal_U"
                  - $ref: "#/components/schemas/Signal_V"
                  - $ref: "#/components/schemas/Signal_W"
                  - $ref: "#/components/schemas/Signal_X"
                  - $ref: "#/components/schemas/Signal_Y"
                  - $ref: "#/components/schemas/Signal_Z"
                  - $ref: "#/components/schemas/Signal_Z1"
                  - $ref: "#/components/schemas/Signal_Z2"
                  - $ref: "#/components/schemas/Signal_Z3"
        400:
          description: "Bad request"
        404:
          description: "Invalid ID supplied"
      security:
        - X_AUTH_TOKEN: []
        - X_AUTH_ID: []
components:
  securitySchemes:
    X_AUTH_TOKEN:
      type: apiKey
      in: header
      name: X-AUTH-TOKEN
    X_AUTH_ID:
      type: apiKey
      in: header
      name: X-AUTH-ID
  schemas:
    SignalLight:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        type:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "integer"
              code:
                type: "string"
              label:
                type: "string"
        status:
          type: "string"
          description: "Signal Status"
          enum:
            - "Détecté"
            - "Suivi"
            - "Terminé"
        links:
          type: "array"
          items:
            type: "object"
            properties:
              rel:
                type: "string"
              href:
                type: "string"
        departments_list:
          type: "array"
          items:
            $ref: '#/components/schemas/Department'
        last_article_pubdate:
          type: "string"
          format: "date"
          pattern:  ^\d{2}/\d{2}/\d{4}$
          description: "Date de publication du dernier article (dd/mm/YYYY)"
          example: "26/03/2021"
        creation_date:
          type: "string"
          format: "date"
          pattern:  ^\d{2}/\d{2}/\d{4}$
          description: "Date de création du signal (dd/mm/YYYY)"
          example: "26/03/2021"
        last_update:
          type: "string"
          format: "date"
          pattern:  ^\d{2}/\d{2}/\d{4}$
          description: "Date de mise à jour du signal (dd/mm/YYYY)"
          example: "26/03/2021"

    Signal:
      type: "object"
      required:
        - type
      properties:
        id:
          type: "integer"
          format: "int64"
        last_article_pubdate:
          type: "string"
          format: "date"
          pattern:  ^\d{2}/\d{2}/\d{4}$
          description: "Date de publication du dernier article (dd/mm/YYYY)"
          example: "26/03/2021"
        creation_date:
          type: "string"
          format: "date"
          pattern:  ^\d{2}/\d{2}/\d{4}$
          description: "Date de création du signal (dd/mm/YYYY)"
          example: "26/03/2021"
        last_update:
          type: "string"
          format: "date"
          pattern:  ^\d{2}/\d{2}/\d{4}$
          description: "Date de mise à jour du signal (dd/mm/YYYY)"
          example: "26/03/2021"
        follow_date:
          type: "string"
          format: "date"
          pattern:  ^\d{2}/\d{2}/\d{4}$
          description: "Date de mise à jour du statut suivi du signal (dd/mm/YYYY)"
          example: "26/03/2022"
        type:
          type: "string"
        label_type:
          type: "string"
        status:
          type: "string"
          description: "Order Status"
          enum:
            - "Détecté"
            - "Suivi"
            - "Terminé"
        company_main:
          type: "array"
          items:
            $ref: '#/components/schemas/CompanyLight'
        company_alt:
          type: "array"
          items:
            $ref: '#/components/schemas/CompanyLight'
        continents:
          type: "array"
          items:
            type: "string"
        countries:
          type: "array"
          items:
            type: "string"
        departments:
          type: "array"
          items:
            $ref: '#/components/schemas/Department'
        city:
          type: "array"
          items:
            type: object
            properties:
              label:
                type: string
              zip_code:
                type: string
              insee_code:
                type: string
              departement_code:
                type: string
            example:
              label: "Parcoul-Chenaud"
              zip_code: "24410"
              insee_code: "24316"
              departement_code: "24"
        city_label:
          type: "string"
        city_zip_code:
          type: "string"
      discriminator:
        propertyName: type
      xml:
        name: "Order"
    Signal_A:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            surface_totale_facilities:
              type: "integer"
            surface_terrain:
              type: "integer"
            surface_bati:
              type: "integer"
            date_start_facilities:
              type: "string"
              format: "date-time"
            date_end_facilities_building:
              type: "string"
              format: "date-time"
            cout_total_facilities_ground:
              type: "integer"
            cout_total_facilities_construction:
              type: "integer"
            cout_total_facilities:
              type: "integer"
            maitre_ouvrage:
              $ref: '#/components/schemas/CompanyLight'
            maitre_oeuvre:
              $ref: '#/components/schemas/CompanyLight'
            type_projet_facilities:
              type: "array"
              items:
                type: "string"
            step_projet_facilities:
              type: "array"
              items:
                type: "string"
            building_permit:
              type: "object"
              properties:
                permit_number:
                  type: string
                type:
                  type: string
              example:
                permit_number: "08611322A0002"
                type: "permis_amenager"
    Signal_B:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            surface_totale_construction:
              type: "integer"
            surface_totale_construction_ground:
              type: "integer"
            date_start_construction:
              type: "string"
              format: "date-time"
            date_end_construction:
              type: "string"
              format: "date-time"
            cout_total_construction:
              type: "integer"
            cout_total_facilities_construction:
              type: "integer"
            cout_total_facilities:
              type: "integer"
            maitre_ouvrage:
              $ref: '#/components/schemas/CompanyLight'
            nature_op_construction_detail:
              type: "array"
              items:
                type: "string"
            nature_op_construction:
              type: "array"
              items:
                type: "string"
            step_projet_construction:
              type: "array"
              items:
                type: "string"
            linked_projet_construction:
              type: "array"
              items:
                type: "string"
            building_permit:
              type: "object"
              properties:
                permit_number:
                  type: string
                type:
                  type: string
              example:
                permit_number: "02431621R0016"
                type: "pc_dp_creant_logements"
    Signal_C:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_infrastructures_works:
              type: "string"
              format: "date-time"
            date_end_infrastructures_works:
              type: "string"
              format: "date-time"
            cout_total_infrastructures:
              type: "integer"
            maitre_ouvrage:
              $ref: '#/components/schemas/CompanyLight'
            type_projet_infrastructures:
              type: "array"
              items:
                type: "string"
            step_projet_infrastructures:
              type: "array"
              items:
                type: "string"
    Signal_D:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            type_projet_disputes:
              type: "array"
              items:
                type: "string"
            step_projet_disputes:
              type: "array"
              items:
                type: "string"
    Signal_E:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_infrastructures_implantation:
              type: "string"
              format: "date-time"
            cout_total_creation_invest:
              type: "integer"
            etablishement_number_creation:
              type: "integer"
            type_projet_creation:
              type: "array"
              items:
                type: "string"
            step_projet_creation:
              type: "array"
              items:
                type: "string"
    Signal_F:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            nature_op_growth:
              type: "array"
              items:
                type: "string"
            step_projet_growth:
              type: "array"
              items:
                type: "string"
    Signal_G:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_relocation:
              type: "string"
              format: "date-time"
            nature_op_relocation:
              type: "array"
              items:
                type: "string"
            type_projet_relocation:
              type: "array"
              items:
                type: "string"
            step_projet_relocation:
              type: "array"
              items:
                type: "string"
    Signal_H:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            nature_op_export:
              type: "array"
              items:
                type: "string"
            step_projet_export:
              type: "array"
              items:
                type: "string"
    Signal_Hbis:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            nature_op_export_goods:
              type: "array"
              items:
                type: "string"
            step_projet_export_goods:
              type: "array"
              items:
                type: "string"
    Signal_I:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_end_closing:
              type: "string"
              format: "date-time"
            nature_op_export:
              type: "array"
              items:
                type: "string"
            step_projet_export:
              type: "array"
              items:
                type: "string"
    Signal_J:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_end_closing:
              type: "string"
              format: "date-time"
            cout_total_innovation:
              type: "integer"
            step_projet_innovation:
              type: "array"
              items:
                type: "string"
    Signal_K:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_invest_materials:
              type: "string"
              format: "date-time"
            date_end_invest_materials:
              type: "string"
              format: "date-time"
            cout_total_invest_materials:
              type: "integer"
            step_projet_invest_materials:
              type: "array"
              items:
                type: "string"
    Signal_K1:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_invest:
              type: "string"
              format: "date-time"
            date_end_invest:
              type: "string"
              format: "date-time"
            cout_total_invest:
              type: "integer"
            step_projet_invest:
              type: "array"
              items:
                type: "string"
            nature_invest:
              type: "array"
              items:
                type: "string"
    Signal_L:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            cout_total_fundraising:
              type: "integer"
            nature_op_fundraising:
              type: "array"
              items:
                type: "string"
            type_projet_operation_fundraising:
              type: "array"
              items:
                type: "string"
            step_projet_fundraising:
              type: "array"
              items:
                type: "string"
            linked_projet_fundraising:
              type: "array"
              items:
                type: "string"
    Signal_M:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            effectif_dismissals:
              type: "integer"
            type_projet_dismissals:
              type: "array"
              items:
                type: "string"
            step_projet_dismissals:
              type: "array"
              items:
                type: "string"
    Signal_N:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            effectif_recruitments:
              type: "integer"
            type_projet_recruitments_functions:
              type: "array"
              items:
                type: "string"
            step_projet_recruitments:
              type: "array"
              items:
                type: "string"
    Signal_O:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_receivership:
              type: "string"
              format: "date-time"
            type_projet_receivership:
              type: "array"
              items:
                type: "string"
            step_projet_receivership:
              type: "array"
              items:
                type: "string"
    Signal_P:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            cout_total_transaction_fusacq:
              type: "integer"
            type_projet_fusacq:
              type: "array"
              items:
                type: "string"
            step_projet_fusacq:
              type: "array"
              items:
                type: "string"
    Signal_Q:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            cout_total_public_financing:
              type: "integer"
            type_projet_public_financing:
              type: "array"
              items:
                type: "string"
            step_projet_public_financing:
              type: "array"
              items:
                type: "string"
    Signal_R:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            type_projet_decline:
              type: "array"
              items:
                type: "string"
    Signal_S:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_launch:
              type: "string"
              format: "date-time"
            type_projet_launch:
              type: "array"
              items:
                type: "string"
            step_projet_launch:
              type: "array"
              items:
                type: "string"
    Signal_T:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_invest_rd:
              type: "string"
              format: "date-time"
            cout_total_invest_rd:
              type: "integer"
            step_projet_rd:
              type: "array"
              items:
                type: "string"
    Signal_Tbis:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_invest:
              type: "string"
              format: "date-time"
            cout_total_invest:
              type: "integer"
            step_projet:
              type: "array"
              items:
                type: "string"
    Signal_U:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_nomination:
              type: "string"
              format: "date-time"
            identity_nomination:
              type: "string"
            type_projet_nomination_function:
              type: "array"
              items:
                type: "string"
            step_projet_nomination:
              type: "array"
              items:
                type: "string"
    Signal_V:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_start_invest_communication:
              type: "string"
              format: "date-time"
            cout_total_invest_communication:
              type: "integer"
            nature_investment:
              type: "array"
              items:
                type: "string"
            step_projet_invest_communication:
              type: "array"
              items:
                type: "string"
    Signal_W:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            surface_totale_land_frame:
              type: "integer"
            cout_total_land_frame_ope:
              type: "integer"
            cout_total_land_frame_sale:
              type: "integer"
            type_projet_land_frame:
              type: "array"
              items:
                type: "string"
            step_projet_land_frame:
              type: "array"
              items:
                type: "string"
    Signal_X:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
    Signal_Y:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            type_projet_information:
              type: "array"
              items:
                type: "string"
    Signal_Z:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            date_event:
              type: "string"
              format: "date-time"
    Signal_Z1:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            nature_rse:
              type: "array"
              items:
                type: "string"
            step_projet_rse:
              type: "array"
              items:
                type: "string"
            cout_total_invest_rse:
              type: "integer"
            estimated_date:
              type: "string"
              format: "date-time"
    Signal_Z2:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            nature_restructuring:
              type: "array"
              items:
                type: "string"
            step_projet_restructuring:
              type: "array"
              items:
                type: "string"
            nb_restructuring:
              type: "integer"
            cout_total_invest:
              type: "integer"
            estimated_date:
              type: "string"
              format: "date-time"
    Signal_Z3:
      allOf:
        - $ref: '#/components/schemas/Signal'
        - type: "object"
          properties:
            nature_act:
              type: "array"
              items:
                type: "string"
            step_projet_act:
              type: "array"
              items:
                type: "string"
            type_act:
              type: "array"
              items:
                type: "string"
            decision:
              type: "string"
            operation_detail:
              type: "integer"
            act_id:
              type: "string"
            estimated_date:
              type: "string"
              format: "date-time"
    Source:
      type: object
      properties:
        source:
          type: string
        pub_date:
          type: string
          pattern: ^\d{2}/\d{2}/\d{4}$
          description: Format d/m/Y
        author:
          type: string
        uri:
          type: string
          format: uri
      example:
        source: ECOMNEWS
        pub_date: "28/01/2020"
        author: "Denys Bédarride"
        uri: "https://ecomnews.fr/article/Nimes-open-tourisme-tab-renforce-grace-altran-mieux-accompagner-start-up"
    Link:
      type: object
      properties:
        rel:
          type: string
          enum:
            - self
            - blank
          example: self
        href:
          type: string
          example: "https://api.decidento.com/companies/2438"
      example:
        rel: self
        href: "https://api.decidento.com/companies/2438"
    ArticleLinks:
      type: array
      items:
        $ref: '#/components/schemas/ArticleLink'
      example:
        -   rel: self
            href: "https://api.decidento.com/articles/2438"
        -   rel: extranet
            href: "https://api.decidento.com/extranet/article/24384"
    ArticleLink:
      type: object
      properties:
        rel:
          type: string
          enum:
            - self
            - blank
            - extranet
          example: self
        href:
          type: string
          example: "https://api.decidento.com/articles/2438"
      example:
        rel: self
        href: "https://api.decidento.com/companies/2438"
    Department:
      type: object
      properties:
        code:
          type: string
        dep:
          type: string
        region:
          type: string
      example:
        code: 92
        dep: "Hauts de Seine"
        region: "Île-de-France"
    Sector:
      type: object
      properties:
        activity:
          type: string
        picture:
          type: string
      example:
        activity: "Distribution Spécialisée"
        picture: "https://api.decidento.com/uploads/medias/Distribution180.png"
    QuotedArticle:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      example:
        id: 164243
        title: "Une nouvelle chaudière biomasse à 160 M€ pour Norske Skog Golbey ?"
        links:
          $ref: '#/components/schemas/Link/example'
    Article:
      type: object
      properties:
        id:
          type: integer
          example: 225741
        title:
          type: string
          example: "Partenariat entre Open Tourisme Lab et Altran"
        text:
          type: string
          example: "Un partenariat entre Open Tourisme Lab Nimes Metropole (<em>siège à Nimes /30 - accélérateur de start-up spécialisées dans le tourisme</em>)&nbsp;et Altran Technologies - Altran (<em>siège à Neuilly-sur-Seine /92 - conseil en innovation et ingénierie avancée - effectif groupe estimé : 12500 - CA légal 2018 : 1 023 212 313€ - CA groupe estimé 2016 : 2 120 000 000€</em>)&nbsp;a été officiellement signé et s'adresse aux professionnels du tourisme. Altran apportera alors son expertise avec des séminaires, des workshops et des audits pour les entreprises accompagnées par Open Tourisme Lab. <a href=\"https://ecomnews.fr/article/Nimes-open-tourisme-tab-renforce-grace-altran-mieux-accompagner-start-up\">Plus d'informations ici</a>.&nbsp;"
        pub_date:
          type: string
          pattern: ^\d{2}/\d{2}/\d{4}$
          description: Format d/m/Y
          example: "22/10/2018"
        event_date:
          type: string
          pattern: ^\d{2}/\d{2}/\d{4}$
          description: Format d/m/Y
          example: "22/10/2018"
        author:
          type: string
          example: Mélodie H
        nature_info:
          type: string
          enum:
            - International
            - National
          example: National
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
        country:
          type: string
          example: France
        sources:
          type: array
          items:
            $ref: '#/components/schemas/Source'
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyLight'
        sectors:
          type: array
          items:
            $ref: '#/components/schemas/Sector'
        quoted_articles:
          type: array
          items:
            $ref: '#/components/schemas/QuotedArticle'
        signals:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/Signal_A"
              - $ref: "#/components/schemas/Signal_B"
              - $ref: "#/components/schemas/Signal_C"
              - $ref: "#/components/schemas/Signal_D"
              - $ref: "#/components/schemas/Signal_E"
              - $ref: "#/components/schemas/Signal_F"
              - $ref: "#/components/schemas/Signal_G"
              - $ref: "#/components/schemas/Signal_H"
              - $ref: "#/components/schemas/Signal_Hbis"
              - $ref: "#/components/schemas/Signal_I"
              - $ref: "#/components/schemas/Signal_J"
              - $ref: "#/components/schemas/Signal_K"
              - $ref: "#/components/schemas/Signal_K1"
              - $ref: "#/components/schemas/Signal_L"
              - $ref: "#/components/schemas/Signal_M"
              - $ref: "#/components/schemas/Signal_N"
              - $ref: "#/components/schemas/Signal_O"
              - $ref: "#/components/schemas/Signal_P"
              - $ref: "#/components/schemas/Signal_Q"
              - $ref: "#/components/schemas/Signal_R"
              - $ref: "#/components/schemas/Signal_S"
              - $ref: "#/components/schemas/Signal_T"
              - $ref: "#/components/schemas/Signal_Tbis"
              - $ref: "#/components/schemas/Signal_U"
              - $ref: "#/components/schemas/Signal_V"
              - $ref: "#/components/schemas/Signal_W"
              - $ref: "#/components/schemas/Signal_X"
              - $ref: "#/components/schemas/Signal_Y"
              - $ref: "#/components/schemas/Signal_Z"
    CompanyLight:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 72242
        siren:
          type: "integer"
          minLength: 9
          maxLength: 9
          pattern: ^\d{9}$
          example: 831946488
        siret:
          type: "integer"
          minLength: 14
          maxLength: 14
          pattern: ^\d{14}$
          example: 83194648800010
        social_name:
          type: "string"
          example: OPEN TOURISME LAB NIMES METROPOLE
        siege:
          type: "boolean"
          example: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        sirets:
          type: "array"
          items:
            type: "object"
            properties:
              siret:
                type: "string"
                example: 83194648800123
              cp:
                type: "string"
                example: 75019
          example:
            - siret: 83194648800123
              type: 75008
            - siret: 8319464885123
              type: 75019
      example:
        id: 72242
        siren: 831946488
        siret: 83194648800010
        siege: true
        social_name: "OPEN TOURISME LAB NIMES METROPOLE"
        sirets:
          - siret: 83194648800123
            type: 75008
          - siret: 83194648800128
            type: 75019
        links:
          - rel: self
            href: "https://api.decidento.com/companies/2438"
          - rel: self
            href: "https://api.decidento.com/companies/24384"
    CompanySimple:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 72242
        siren:
          type: "integer"
          minLength: 9
          maxLength: 9
          pattern: ^\d{9}$
          example: 831946488
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      example:
        id: 72242
        siren: 831946488
        links:
          -   rel: self
              href: "https://api.decidento.com/companies/2438"
          -   rel: self
              href: "https://api.decidento.com/companies/24384"

    Company:
      allOf:
        - $ref: '#/components/schemas/CompanyLight'
        - type: "object"
          properties:
            last_modified:
              type: string
              format: date-time
            enseigne:
              type: string
            sigle:
              type: string
            rcs:
              type: string
            tva_number:
              type: string
            index_euro:
              type: integer
            immatriculation_date:
              type: string
              format: date
              pattern: ^\d{2}/\d{2}/\d{4}$
              description: Format d/m/Y
            naf_code:
              type: string
            juridic_form:
              type: string
            type_etablissement:
              type: string
              enum:
                - "0"
                - "1"
                - "2"
            categorie_full:
              type: string
            categorie_light:
              type: string
            capital_social:
              type: integer
            fonds_propres:
              type: integer
            ca_bilan:
              type: integer
            effectif_precis:
              type: integer
            resultat_net:
              type: integer
            resultat_exploitation:
              type: integer
            date_cloture:
              type: string
              format: date
              pattern: ^\d{2}/\d{2}/\d{4}$
              description: Format d/m/Y
            radiate:
              type: boolean
            indice_risque_info_legal:
              type: string
            indice_risque_score3:
              type: string
              description: "Score between 0-10"
            anne_indice_risque_score3:
              type: string
            nb_actionnaires:
              type: integer
            nb_filliales_directes:
              type: integer
            nb_filliales_indirectes:
              type: integer
            address:
              type: string
            zip:
              type: string
            city:
              type: string
            department:
              type: string
            country:
              type: string
            geo_lat:
              type: number
            geo_long:
              type: number
            telephone_number:
              type: string
            fax_number:
              type: string
            web_site:
              type: string
            url_maps:
              type: string
            url_viadeo":
              type: string
            url_twitter":
              type: string
            url_gnews":
              type: string
            url_wikipedia":
              type: string
            url_facebook":
              type: string
            url_linkedin":
              type: string
            url_score3":
              type: string
            url_scoopit":
              type: string
            logo_url":
              type: string
            email_contact":
              type: string
            contacts:
              type: "array"
              items:
                type: "object"
                properties:
                  name:
                    type: string
                  role:
                    type: string
            nb_actes:
              type: integer
      example:
        last_modified: "2015-08-28 03:40:48"
        enseigne: Burger King
        sigle: LCL
        rcs: RCS Paris 654 987 321
        tva_number: FR76662042449
        index_euro: 998209
        immatriculation_date: "01/07/1966"
        naf_code: "6419Z - Autres intermédiations monétaires"
        juridic_form: Autre SA à conseil d'administration
        type_etablissement: "1"
        categorie_full: Autres intermédiations monétaires
        category_light: banque et assurance
        capital_social: 2499597122
        fonds_propres: 344069905
        ca_bilan: 44069905
        effectif_precis: 43200
        resultat_net: 3645976
        resultat_exploitation: 645976
        radiate: false
        indice_risque_info_legal: Risque faible
        indice_risque_score3: 5
        anne_indice_risque_score3: 2017
        nb_filliales_directes": 2
        nb_filliales_indirectes": 2
        address: "1762 route de Pontenx"
        zip: "40160"
        city: "PARENTIS-EN-BORN"
        department: "Landes"
        country: "France"
        geo_lat: 44.342170715332
        geo_long: -1.0811624526978
        telephone_number: "05 58 82 95 00"
        fax_number: "01 42 82 12 99"
        web_site: "//google.fr"
        url_maps": "44.3351073;-1.0852105000000165"
        url_viadeo": ""
        url_twitter": ""
        url_gnews": ""
        url_wikipedia": ""
        url_facebook": ""
        url_linkedin": ""
        url_score3": "//www.score3.fr/VERMILION-REP-SAS-410964837.shtml"
        url_scoopit": ""
        logo_url": ""
        email_contact": "contact@mycompany.com"
        contacts:
          - name: mr X
            role: "Président"
          - name: Miss Y
            role: "Directeur général"
        nb_actes: 5
    Contact:
      type: "object"
      properties:
        type:
          type: "string"
          nullable: false
          minLength: 0
          maxLength: 100
          example: "P.Physique"
        name:
          type: "string"
          nullable: false
          minLength: 0
          maxLength: 100
          example: "XXXXXX"
        first_name:
          type: "string"
          nullable: false
          minLength: 0
          maxLength: 100
          example: "yyyyyy"
        role:
          type: "string"
          nullable: false
          minLength: 0
          maxLength: 100
          example: "Président"
    CompanyLightV2:
      type: "object"
      properties:
        cccid:
          type: "string"
          nullable: false
          minLength: 13
          maxLength: 14
          pattern: ^(FR|ETR)_\d{9}$
          example: FR_123456789
        siren:
          type: "integer"
          nullable: true
          minLength: 9
          maxLength: 9
          pattern: ^\d{9}$
          example: 831946488
        siret_siege:
          type: "integer"
          nullable: true
          minLength: 14
          maxLength: 14
          pattern: ^\d{14}$
          example: 83194648800010
        raison_sociale:
          type: "string"
          nullable: true
          minLength: 0
          maxLength: 100
          example: OPEN TOURISME LAB NIMES METROPOLE
        type_etablissement:
          type: "string"
          nullable: true
          example: siege
        appartient_groupe:
          type: "boolean"
          nullable: false
          example: false
        adresse_complete:
          type: "string"
          minLength: 0
          maxLength: 150
          nullable: true
          example: "13 rue Jules Valles 69100 VILLEURBANNE"
        adresse_postale:
          type: "string"
          minLength: 0
          maxLength: 100
          nullable: true
          example: "13 rue Jules Valles"
        code_postal:
          type: "string"
          minLength: 5
          maxLength: 5
          nullable: true
          example: "VILLEURBANNE"
        ville:
          type: "string"
          minLength: 0
          maxLength: 50
          nullable: true
          example: "69100"
        last_modified:
          type: "string"
          format: "date-time"
          minLength: 0
          maxLength: 10
          example: "2021-11-12T15:40:35"
          pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$'
        sigle:
          type: "string"
          minLength: 0
          maxLength: 100
          nullable: true
          example: "ANPE"
        resume_activite:
          type: "string"
          minLength: 0
          maxLength: 250
          nullable: true
          example: "ANPE"
        pays:
          type: "string"
          minLength: 0
          maxLength: 50
          nullable: true
          example: "France"
        radiee:
          type: "boolean"
          nullable: false
          example: false
        nbre_signaux:
          type: "integer"
          nullable: true
          minLength: 0
          maxLength: 5
          pattern: ^\d{5}$
          example: 1
        nbre_articles:
          type: "integer"
          nullable: true
          minLength: 0
          maxLength: 5
          pattern: ^\d{5}$
          example: 2
        logo_url:
          type: "string"
          minLength: 0
          maxLength: 100
          nullable: true
          example: "https://pbs.twimg.com/profile_images/730069922391465984/iosvIlkK_400x400.jpg"
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      example:
        cccid: "FR_519570196"
        siren: "519570196"
        siret_siege: "51957019600047"
        type_etablissement: "siege"
        raison_sociale: "NOVAWAY"
        appartient_groupe: false
        adresse_complete: "13 rue Jules Valles 69100 VILLEURBANNE"
        adresse_postale: "13 rue Jules Valles"
        code_postal: "69100"
        ville: "VILLEURBANNE"
        last_modified: "2021-12-07T15:35:45"
        sigle: null
        resume_activite: "développement de logiciels métiers, applications et plateformes web"
        pays: "France"
        radiee: false
        nbre_signaux: 1
        nbre_articles: 1
        logo_url: "https://pbs.twimg.com/profile_images/730069922391465984/iosvIlkK_400x400.jpg"
        links":
          - rel: "self"
            href: "https://decidentov2.local-centos7.com/companies/FR_519570196"
          - rel: "extranet"
            href: "https://decidentov2.local-centos7.com/app_dev.php/extranet/company/infoplusV2/FR_519570196"
    CompanyV2:
      allOf:
        - $ref: '#/components/schemas/CompanyLightV2'
        - type: "object"
          properties:
            nombre_etablissements_secondaires_inactifs:
              type: "integer"
              nullable: true
              example: 3
            nombre_etablissements_secondaires_actifs:
              type: "integer"
              nullable: true
              example: 30
            caractere_employeur:
              type: "boolean"
              example: true
            enseignes:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 500
              example: null
            date_creation:
              type: "string"
              format: "date"
              nullable: true
              minLength: 0
              maxLength: 10
              example: "2010-01-05"
              pattern: '^\d{4}-\d{2}-\d{2}$'
            numero_tva:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 20
              example: "FR43519570196"
            telephone:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 20
              example: "04 82 53 99 00"
            departement_label:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 100
              example: "Rhône"
            departement:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 5
              example: "69"
            geo_lat:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 20
              example: "45.769417"
            geo_long:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 20
              example: "4.864512"
            secteur_activité_lies:
              type: "array"
              items:
                type: "string"
              example:
                - "Cultures diverses"
                - "Chimie minérale"
            code_ape_lies:
              type: "array"
              items:
                type: "object"
                properties:
                  code_ape:
                    type: "string"
                    example: "01.11Z"
                  code_ape_label:
                    type: "string"
                    example: "Culture de céréales (à l'exception du riz), de légumineuses et de graines oléagineuses"
              example:
                - code_ape: "01.11Z"
                  code_ape_label: "Culture de céréales (à l'exception du riz), de légumineuses et de graines oléagineuses"
                - code_ape: "01.12Z"
                  code_ape_label: "Culture du riz"
            code_ape:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 6
              example: "62.01Z"
            code_ape_brut:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 5
              example: "6201Z"
            code_ape_label:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 200
              example: "Programmation informatique"
            code_ape_complet:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 210
              example: "6201Z - Programmation informatique"
            forme_juridique_code:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 4
              example: "5710"
            forme_juridique:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 100
              example: "SAS société par actions simplifiée"
            type_entreprise:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 20
              example: "PME"
            site_ecommerce:
              type: "boolean"
              example: false
            activite_rd:
              type: "boolean"
              example: false
            activite_export:
              type: "boolean"
              example: false
            cac40:
              type: "boolean"
              example: false
            startup:
              type: "boolean"
              example: false
            secteur_industriel:
              type: "boolean"
              example: false
            entreprise_fintech:
              type: "boolean"
              example: false
            entreprise_familiale:
              type: "boolean"
              example: false
            entreprise_b2c:
              type: "boolean"
              example: true
            entreprise_b2b:
              type: "boolean"
              example: true
            entreprise_biotech_medtech:
              type: "boolean"
              example: false
            website:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 100
              example: null
            url_twitter:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 100
              example: "https://twitter.com/@novaway"
            url_facebook:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 100
              example: "https://www.facebook.com/novawayfr/"
            url_linkedin:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 100
              example: "https://www.linkedin.com/company/novaway/"
            email_contact:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 100
              example: "contact@novaway.fr"
            code_confidentialite:
              type: "boolean"
              example: true
            avertissement_bilan:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 150
              example: "les bilans étant confidentiels ou non disponibles nous ne pouvons afficher toutes les données chiffrées"
            subventions_investissements:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            participation_bilan:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            resultat_bilan:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            resultat_net_consolide:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            dotations_amortissements:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 23456789
            ca_consolide:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            resultat_exploitation:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            ca_bilan:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            impots_taxes:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            effectif_sous_traitance:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            charges_financieres:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            salaires_traitements:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            ca_export:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            ca_france:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 123456789
            effectif:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 10
            fonds_propres:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 529033
            capital_social:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 13500
            duree_exercice:
              type: "integer"
              nullable: true
              minLength: 0
              maxLength: 20
              example: 12
            annee_cloture_exercice:
              type: "string"
              nullable: true
              minLength: 0
              maxLength: 4
              example: "2020"
            date_cloture_exercice:
              type: "string"
              format: "date"
              nullable: true
              minLength: 0
              maxLength: 10
              example: "2020-12-31"
              pattern: '^\d{4}-\d{2}-\d{2}$'
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/Contact'
      example:
        cccid: "FR_519570196"
        siren: "519570196"
        siret_siege: "51957019600047"
        type_etablissement: "siege"
        raison_sociale: "NOVAWAY"
        appartient_groupe: false
        adresse_complete: "13 rue Jules Valles 69100 VILLEURBANNE"
        adresse_postale: "13 rue Jules Valles"
        code_postal: "69100"
        ville: "VILLEURBANNE"
        last_modified: null
        sigle: null
        resume_activite: "développement de logiciels métiers applications et plateformes web"
        pays: "France"
        radiee: false
        nbre_signaux: 0
        nbre_articles: 0
        logo_url: "https://pbs.twimg.com/profile_images/730069922391465984/iosvIlkK_400x400.jpg"
        links:
          - rel: "self"
            href: "https://api.decidento.com/companies/FR_519570196"
          - rel: "extranet"
            href: "https://api.decidento.com/extranet/company/infoplusV2/FR_519570196"
        nombre_etablissements_secondaires_inactifs: 3
        nombre_etablissements_secondaires_actifs: 0
        caractere_employeur: true
        enseignes: null
        date_creation: "2010-01-05"
        numero_tva: "FR43519570196"
        telephone: "04 82 53 99 00"
        departement_label: "Rhône"
        departement: "69"
        geo_lat: "45.769417"
        geo_long: "4.864512"
        code_ape: "62.01Z"
        code_ape_brut: "6201Z"
        code_ape_label: "Programmation informatique"
        code_ape_complet: "6201Z - Programmation informatique"
        forme_juridique_code: "5710"
        forme_juridique: "SAS société par actions simplifiée"
        type_entreprise: "PME"
        site_ecommerce: false
        activite_rd: false
        activite_export: false
        cac40: false
        startup: false
        secteur_industriel: false
        entreprise_fintech: false
        entreprise_familiale: false
        entreprise_b2c: true
        entreprise_b2b: true
        entreprise_biotech_medtech: false
        website: null
        url_twitter: "https://twitter.com/@novaway"
        url_facebook: "https://www.facebook.com/novawayfr/"
        url_linkedin: "https://www.linkedin.com/company/novaway/"
        email_contact: "contact@novaway.fr"
        code_confidentialite: true
        avertissement_bilan: "les bilans étant confidentiels ou non disponibles nous ne pouvons afficher toutes les données chiffrées"
        subventions_investissements: 123456789
        participation_bilan: 123456789
        resultat_bilan: 123456789
        resultat_net_consolide: 123456789
        dotations_amortissements: 123456789
        ca_consolide: 123456789
        resultat_exploitation: 123456789
        ca_bilan: 123456789
        impots_taxes: 123456789
        effectif_sous_traitance: 123456789
        charges_financieres: 123456789
        salaires_traitements: 123456789
        ca_export: 123456789
        ca_france: 123456789
        effectif: 10
        fonds_propres: 529033
        capital_social: 13500
        duree_exercice: 12
        annee_cloture_exercice: "2020"
        date_cloture_exercice: "2020-12-31"
        contacts:
          - type: "P.Physique"
            name: mr X
            first_name: "xxxx"
            role: "Président"
          - type: "P.Physique"
            name: Miss Y
            role: "Directeur général"
            first_name: "yyyy"
externalDocs:
  description: "Find  more about Decidento"
  url: "https://www.decidento.com"
